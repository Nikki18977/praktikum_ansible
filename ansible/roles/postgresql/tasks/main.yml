---
# tasks file for postgresql

- name: "Installing repo and packages"
  ansible.builtin.yum:
    name: "{{ item }}" 
    state: "latest"
    update_cache: true
  with_items:
    - "epel-release" 
    - "postgresql-server"
    - "python-psycopg2"


- name: Install python deps
  ansible.builtin.yum:
    name:
      - python2-pip
      - python-setuptools
    state: latest
    update_cache: True

- name: Install ipaddress via pip
  ansible.builtin.pip:
    name: ipaddress
    executable: pip2


- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_config

- name: "Initialize PostgreSQL"
  ansible.builtin.shell: "postgresql-setup initdb"
  when: not postgres_config.stat.exists
  
- name: "Start and enable services"
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true



- name: "Create myapp user, set MD5-hashed password"
  community.postgresql.postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    state: present
  become_user: postgres


- name: "Dell"
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: "all"
    method: "ident"                  # del host    all     all     127.0.0.1/32    ident
    address: "127.0.0.1/32"
    state: absent
  become_user: postgres


- name: "Grant users db_user access to databases using md5 authentication"
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: "{{ db_user }}"
    method: md5                      #add host    all     myappuser     all    md5
    address: "all"
    create: true
  become_user: postgres

- name: "Create a new database with name db_password"
  community.postgresql.postgresql_db:
    name: "{{ db_name }}"
  become_user: postgres  

- name: "Connect to database, grant privs"
  community.postgresql.postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    priv: ALL
  become_user: postgres  

- name: "Reload services"
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: true